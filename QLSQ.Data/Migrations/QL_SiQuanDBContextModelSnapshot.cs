// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QLSQ.Data.EF;

namespace QLSQ.Data.Migrations
{
    [DbContext(typeof(QL_SiQuanDBContext))]
    partial class QL_SiQuanDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("RoleClaim");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UserClaim");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("UserLogin");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("ef234b11-ccc7-45d3-ba16-5ebf721ee6c8"),
                            RoleId = new Guid("37fe170e-027e-4e7f-aba5-15743063aeb2")
                        },
                        new
                        {
                            UserId = new Guid("9ece85c8-a453-4ffc-b5ab-bf7d4c3365f9"),
                            RoleId = new Guid("42ff6f47-9edd-451f-bf03-db895dfcfff9")
                        },
                        new
                        {
                            UserId = new Guid("78b61ff5-714b-4c2e-9566-6df4396b1208"),
                            RoleId = new Guid("42ff6f47-9edd-451f-bf03-db895dfcfff9")
                        },
                        new
                        {
                            UserId = new Guid("4c39ee3b-0277-4b32-8173-261988cce2ee"),
                            RoleId = new Guid("42ff6f47-9edd-451f-bf03-db895dfcfff9")
                        },
                        new
                        {
                            UserId = new Guid("2c31d31e-1520-48ee-9e62-2311829cf7ba"),
                            RoleId = new Guid("42ff6f47-9edd-451f-bf03-db895dfcfff9")
                        },
                        new
                        {
                            UserId = new Guid("41a8e023-7c08-46bb-858c-5a3b219818cb"),
                            RoleId = new Guid("42ff6f47-9edd-451f-bf03-db895dfcfff9")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("UserToken");
                });

            modelBuilder.Entity("QLSQ.Data.Entities.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mota")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppRole");

                    b.HasData(
                        new
                        {
                            Id = new Guid("37fe170e-027e-4e7f-aba5-15743063aeb2"),
                            ConcurrencyStamp = "8cbb05c0-14dd-46d6-84a8-b8cfba564d88",
                            Mota = "Administrator Role",
                            Name = "admin",
                            NormalizedName = "admin"
                        },
                        new
                        {
                            Id = new Guid("42ff6f47-9edd-451f-bf03-db895dfcfff9"),
                            ConcurrencyStamp = "4eb90a1b-c1df-4601-952a-51a9d793f7de",
                            Mota = "Si Quan Role",
                            Name = "Si Quan",
                            NormalizedName = "Si Quan"
                        });
                });

            modelBuilder.Entity("QLSQ.Data.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppUser");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ef234b11-ccc7-45d3-ba16-5ebf721ee6c8"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "357be042-2591-4da8-9c56-d308b468db5d",
                            Email = "dinhducbac1998@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "dinhducbac1998@gmail.com",
                            NormalizedUserName = "admin",
                            PasswordHash = "AQAAAAEAACcQAAAAEAsSYYglT+DLci3rwWLq3pzbS+9B/N940KufqbZG5e5aEhA4PY44W589DnQaZQK8cw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        },
                        new
                        {
                            Id = new Guid("9ece85c8-a453-4ffc-b5ab-bf7d4c3365f9"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "fc3eaa98-5116-4c3a-be7d-ffeb36920e24",
                            Email = "lethihien@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "lethihien@gmail.com",
                            NormalizedUserName = "lethihien",
                            PasswordHash = "AQAAAAEAACcQAAAAEOzGF3zJg3PbxB4zsDwV+safGFXPqh4E0Z9AkxdRUJcJ7omQ4q7itI6BkMRQK+59wQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "lethihien"
                        },
                        new
                        {
                            Id = new Guid("78b61ff5-714b-4c2e-9566-6df4396b1208"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "73dc526b-412f-493e-bee9-dc92aa8e8eaa",
                            Email = "dovantuan@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "dovantuan@gmail.com",
                            NormalizedUserName = "dovantuan",
                            PasswordHash = "AQAAAAEAACcQAAAAEGvUPkGpWFP14eZl8GeDQdUmF1JMkjooVKjZ3rdYparyFV/glow2+fZHem7FZdhLqQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "dovantuan"
                        },
                        new
                        {
                            Id = new Guid("4c39ee3b-0277-4b32-8173-261988cce2ee"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a6d8d226-6c4e-493e-8440-3484236db0f7",
                            Email = "lethigiang@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "lethigiang@gmail.com",
                            NormalizedUserName = "lethigiang",
                            PasswordHash = "AQAAAAEAACcQAAAAEIYG0Zn6VWZvMGbR5JlhhcQfc7Ppmo7MNLPfXUa969/G3O0KE2Dprhvx6NO2Z8k6wA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "lethigiang"
                        },
                        new
                        {
                            Id = new Guid("2c31d31e-1520-48ee-9e62-2311829cf7ba"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7ec2b2a8-f07f-42fc-8b2c-7c3c2d58d95e",
                            Email = "nguyenvanhoan@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "nguyenvanhoan@gmail.com",
                            NormalizedUserName = "nguyenvanhoan",
                            PasswordHash = "AQAAAAEAACcQAAAAEMsdh34DBwKb3ThclesXcpbX5lR2Cn8bnBY9/p8Q0lB4oJoNDMn7DM4+cXH4mdWBkg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "nguyenvanhoan"
                        },
                        new
                        {
                            Id = new Guid("41a8e023-7c08-46bb-858c-5a3b219818cb"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "17c80d4f-1d56-41a7-ba72-29e80147e99f",
                            Email = "vuvancanh@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "vuvancanh@gmail.com",
                            NormalizedUserName = "vuvancanh",
                            PasswordHash = "AQAAAAEAACcQAAAAEJXkHAWdeATWZ48EFTF9uTJWlInB17gIvw03X+VgV2M1t4mWiSPtUl7Uf/Nukj4JCA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "vuvancanh"
                        });
                });

            modelBuilder.Entity("QLSQ.Data.Entities.BoPhan", b =>
                {
                    b.Property<int>("IDBP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("TenBP")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IDBP");

                    b.ToTable("BoPhan");

                    b.HasData(
                        new
                        {
                            IDBP = 1,
                            TenBP = "Ban giám hiệu"
                        },
                        new
                        {
                            IDBP = 2,
                            TenBP = "Phòng"
                        },
                        new
                        {
                            IDBP = 3,
                            TenBP = "Trợ lý"
                        },
                        new
                        {
                            IDBP = 4,
                            TenBP = "Khoa"
                        },
                        new
                        {
                            IDBP = 5,
                            TenBP = "Đơn vị"
                        });
                });

            modelBuilder.Entity("QLSQ.Data.Entities.ChucVu", b =>
                {
                    b.Property<int>("IDCV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("IDBP")
                        .HasColumnType("int");

                    b.Property<string>("TenCV")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IDCV");

                    b.HasIndex("IDBP");

                    b.ToTable("ChucVu");

                    b.HasData(
                        new
                        {
                            IDCV = 1,
                            IDBP = 1,
                            TenCV = "Hiệu trưởng"
                        },
                        new
                        {
                            IDCV = 2,
                            IDBP = 1,
                            TenCV = "Hiệu phó đào tạo"
                        },
                        new
                        {
                            IDCV = 3,
                            IDBP = 1,
                            TenCV = "Phó quân sự"
                        },
                        new
                        {
                            IDCV = 4,
                            IDBP = 1,
                            TenCV = "Phó kỹ thuật"
                        },
                        new
                        {
                            IDCV = 5,
                            IDBP = 2,
                            TenCV = "Trưởng phòng"
                        },
                        new
                        {
                            IDCV = 6,
                            IDBP = 2,
                            TenCV = "Phó phòng"
                        },
                        new
                        {
                            IDCV = 7,
                            IDBP = 2,
                            TenCV = "Trưởng ban"
                        },
                        new
                        {
                            IDCV = 8,
                            IDBP = 2,
                            TenCV = "Phó ban"
                        },
                        new
                        {
                            IDCV = 9,
                            IDBP = 3,
                            TenCV = "Chủ nhiệm hậu cần"
                        },
                        new
                        {
                            IDCV = 10,
                            IDBP = 3,
                            TenCV = "Chủ nhiệm kỹ thuật"
                        },
                        new
                        {
                            IDCV = 11,
                            IDBP = 3,
                            TenCV = "Chủ nhiệm chính trị"
                        },
                        new
                        {
                            IDCV = 12,
                            IDBP = 4,
                            TenCV = "Chủ nhiệm khoa"
                        },
                        new
                        {
                            IDCV = 13,
                            IDBP = 4,
                            TenCV = "Phó chủ nhiệm khoa"
                        },
                        new
                        {
                            IDCV = 14,
                            IDBP = 4,
                            TenCV = "Chủ nhiệm bộ môn"
                        },
                        new
                        {
                            IDCV = 15,
                            IDBP = 4,
                            TenCV = "Giáo viên"
                        },
                        new
                        {
                            IDCV = 16,
                            IDBP = 4,
                            TenCV = "Nhân viên"
                        },
                        new
                        {
                            IDCV = 17,
                            IDBP = 5,
                            TenCV = "Tiểu đoàn trưởng"
                        },
                        new
                        {
                            IDCV = 18,
                            IDBP = 5,
                            TenCV = "Phó tiểu đoàn trưởng"
                        },
                        new
                        {
                            IDCV = 19,
                            IDBP = 5,
                            TenCV = "Đại đội trưởng"
                        },
                        new
                        {
                            IDCV = 20,
                            IDBP = 5,
                            TenCV = "Phó đại đội trưởng"
                        },
                        new
                        {
                            IDCV = 21,
                            IDBP = 5,
                            TenCV = "Trung đội trưởng"
                        });
                });

            modelBuilder.Entity("QLSQ.Data.Entities.HeSoLuongTheoQuanHam", b =>
                {
                    b.Property<int>("IDHeSoLuongQH")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float>("HeSoLuong")
                        .HasColumnType("real");

                    b.Property<int>("IDQH")
                        .HasColumnType("int");

                    b.Property<string>("TenHeSoLuongQH")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDHeSoLuongQH");

                    b.HasIndex("IDQH");

                    b.ToTable("HeSoLuongTheoQuanHam");

                    b.HasData(
                        new
                        {
                            IDHeSoLuongQH = 1,
                            HeSoLuong = 4.2f,
                            IDQH = 1,
                            TenHeSoLuongQH = "Thiếu Úy"
                        },
                        new
                        {
                            IDHeSoLuongQH = 2,
                            HeSoLuong = 4.6f,
                            IDQH = 2,
                            TenHeSoLuongQH = "Trung Úy"
                        },
                        new
                        {
                            IDHeSoLuongQH = 3,
                            HeSoLuong = 5f,
                            IDQH = 3,
                            TenHeSoLuongQH = "Thượng Úy"
                        },
                        new
                        {
                            IDHeSoLuongQH = 4,
                            HeSoLuong = 5.4f,
                            IDQH = 4,
                            TenHeSoLuongQH = "Đại Úy"
                        },
                        new
                        {
                            IDHeSoLuongQH = 5,
                            HeSoLuong = 6f,
                            IDQH = 5,
                            TenHeSoLuongQH = "Thiếu Tá"
                        },
                        new
                        {
                            IDHeSoLuongQH = 6,
                            HeSoLuong = 6.6f,
                            IDQH = 6,
                            TenHeSoLuongQH = "Trung Tá"
                        },
                        new
                        {
                            IDHeSoLuongQH = 7,
                            HeSoLuong = 7.3f,
                            IDQH = 7,
                            TenHeSoLuongQH = "Thượng Tá"
                        },
                        new
                        {
                            IDHeSoLuongQH = 8,
                            HeSoLuong = 8f,
                            IDQH = 8,
                            TenHeSoLuongQH = "Đại Tá"
                        },
                        new
                        {
                            IDHeSoLuongQH = 9,
                            HeSoLuong = 8.6f,
                            IDQH = 9,
                            TenHeSoLuongQH = "Thiếu Tướng"
                        },
                        new
                        {
                            IDHeSoLuongQH = 10,
                            HeSoLuong = 9.2f,
                            IDQH = 10,
                            TenHeSoLuongQH = "Trung Tướng"
                        },
                        new
                        {
                            IDHeSoLuongQH = 11,
                            HeSoLuong = 9.8f,
                            IDQH = 11,
                            TenHeSoLuongQH = "Thượng Tướng"
                        },
                        new
                        {
                            IDHeSoLuongQH = 12,
                            HeSoLuong = 10.4f,
                            IDQH = 12,
                            TenHeSoLuongQH = "Đại Tướng"
                        });
                });

            modelBuilder.Entity("QLSQ.Data.Entities.HeSoPhuCapTheoChucVu", b =>
                {
                    b.Property<int>("IDHeSoPhuCapCV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float>("HeSoPhuCap")
                        .HasColumnType("real");

                    b.Property<int>("IDCV")
                        .HasColumnType("int");

                    b.HasKey("IDHeSoPhuCapCV");

                    b.HasIndex("IDCV");

                    b.ToTable("HeSoPhuCapTheoChucVu");

                    b.HasData(
                        new
                        {
                            IDHeSoPhuCapCV = 1,
                            HeSoPhuCap = 0.25f,
                            IDCV = 15
                        });
                });

            modelBuilder.Entity("QLSQ.Data.Entities.LuongCoBan", b =>
                {
                    b.Property<int>("IDLuongCB")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("LuongCB")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("IDLuongCB");

                    b.ToTable("LuongCoBan");

                    b.HasData(
                        new
                        {
                            IDLuongCB = 1,
                            LuongCB = 1429000m
                        });
                });

            modelBuilder.Entity("QLSQ.Data.Entities.QLChucVu", b =>
                {
                    b.Property<int>("IDQLCV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("IDCV")
                        .HasColumnType("int");

                    b.Property<int>("IDSQ")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayNhan")
                        .HasColumnType("datetime2");

                    b.HasKey("IDQLCV");

                    b.HasIndex("IDCV");

                    b.HasIndex("IDSQ");

                    b.ToTable("QLChucVu");

                    b.HasData(
                        new
                        {
                            IDQLCV = 1,
                            IDCV = 15,
                            IDSQ = 1,
                            NgayNhan = new DateTime(2008, 3, 21, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IDQLCV = 2,
                            IDCV = 15,
                            IDSQ = 2,
                            NgayNhan = new DateTime(2008, 3, 21, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IDQLCV = 3,
                            IDCV = 15,
                            IDSQ = 3,
                            NgayNhan = new DateTime(2008, 3, 21, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IDQLCV = 4,
                            IDCV = 15,
                            IDSQ = 4,
                            NgayNhan = new DateTime(2008, 3, 21, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IDQLCV = 5,
                            IDCV = 15,
                            IDSQ = 5,
                            NgayNhan = new DateTime(2006, 3, 21, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("QLSQ.Data.Entities.QLCongTac", b =>
                {
                    b.Property<int>("IDCT")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CongTacState")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("DiaChiCT")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("IDSQ")
                        .HasColumnType("int");

                    b.Property<DateTime>("ThoiGianBatDauCT")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianKetThucCT")
                        .HasColumnType("datetime2");

                    b.HasKey("IDCT");

                    b.HasIndex("IDSQ");

                    b.ToTable("QLCongTac");

                    b.HasData(
                        new
                        {
                            IDCT = 1,
                            CongTacState = 1,
                            DiaChiCT = "Trường Sĩ quan Thông tin, Nha Trang, Khánh Hòa",
                            IDSQ = 1,
                            ThoiGianBatDauCT = new DateTime(2007, 9, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ThoiGianKetThucCT = new DateTime(2030, 9, 13, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IDCT = 2,
                            CongTacState = 1,
                            DiaChiCT = "Trường Sĩ quan Thông tin, Nha Trang, Khánh Hòa",
                            IDSQ = 2,
                            ThoiGianBatDauCT = new DateTime(2007, 9, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ThoiGianKetThucCT = new DateTime(2030, 9, 13, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IDCT = 3,
                            CongTacState = 1,
                            DiaChiCT = "Trường Sĩ quan Thông tin, Nha Trang, Khánh Hòa",
                            IDSQ = 3,
                            ThoiGianBatDauCT = new DateTime(2007, 9, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ThoiGianKetThucCT = new DateTime(2030, 9, 13, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IDCT = 4,
                            CongTacState = 1,
                            DiaChiCT = "Trường Sĩ quan Thông tin, Nha Trang, Khánh Hòa",
                            IDSQ = 4,
                            ThoiGianBatDauCT = new DateTime(2007, 9, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ThoiGianKetThucCT = new DateTime(2030, 9, 13, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IDCT = 5,
                            CongTacState = 1,
                            DiaChiCT = "Trường Sĩ quan Thông tin, Nha Trang, Khánh Hòa",
                            IDSQ = 5,
                            ThoiGianBatDauCT = new DateTime(2005, 9, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ThoiGianKetThucCT = new DateTime(2030, 9, 13, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("QLSQ.Data.Entities.QLDangVien", b =>
                {
                    b.Property<int>("IDQLDV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("IDSQ")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayVaoDang")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiVaoDang")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("IDQLDV");

                    b.HasIndex("IDSQ");

                    b.ToTable("QLDangVien");

                    b.HasData(
                        new
                        {
                            IDQLDV = 1,
                            IDSQ = 1,
                            NgayVaoDang = new DateTime(2007, 8, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NoiVaoDang = "Trường Sĩ quan Thông tin, Nha Trang, Khánh Hòa"
                        },
                        new
                        {
                            IDQLDV = 2,
                            IDSQ = 2,
                            NgayVaoDang = new DateTime(2007, 8, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NoiVaoDang = "Trường Sĩ quan Thông tin, Nha Trang, Khánh Hòa"
                        },
                        new
                        {
                            IDQLDV = 3,
                            IDSQ = 3,
                            NgayVaoDang = new DateTime(2007, 8, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NoiVaoDang = "Trường Sĩ quan Thông tin, Nha Trang, Khánh Hòa"
                        },
                        new
                        {
                            IDQLDV = 4,
                            IDSQ = 4,
                            NgayVaoDang = new DateTime(2007, 8, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NoiVaoDang = "Trường Sĩ quan Thông tin, Nha Trang, Khánh Hòa"
                        },
                        new
                        {
                            IDQLDV = 5,
                            IDSQ = 5,
                            NgayVaoDang = new DateTime(2005, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NoiVaoDang = "Trường Sĩ quan Thông tin, Nha Trang, Khánh Hòa"
                        });
                });

            modelBuilder.Entity("QLSQ.Data.Entities.QLGiaDinhSQ", b =>
                {
                    b.Property<int>("IDQLGDSQ")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("IDSQ")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("QuanHe")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("IDQLGDSQ");

                    b.HasIndex("IDSQ");

                    b.ToTable("QLGiaDinhSQ");

                    b.HasData(
                        new
                        {
                            IDQLGDSQ = 1,
                            GhiChu = "Nghề nghiệp: Test",
                            HoTen = "Test",
                            IDSQ = 1,
                            NgaySinh = new DateTime(1967, 8, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QuanHe = "Chồng"
                        });
                });

            modelBuilder.Entity("QLSQ.Data.Entities.QLKhenThuongKiLuat", b =>
                {
                    b.Property<int>("IDQLKTKL")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DonViCap")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("HinhThuc")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("IDSQ")
                        .HasColumnType("int");

                    b.Property<int>("LoaiKTKL")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("NgayThucHien")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("IDQLKTKL");

                    b.HasIndex("IDSQ");

                    b.ToTable("QLKhenThuongKiLuat");

                    b.HasData(
                        new
                        {
                            IDQLKTKL = 1,
                            DonViCap = "Trường sĩ quan thông tin",
                            HinhThuc = "Huân chương",
                            IDSQ = 5,
                            LoaiKTKL = 1,
                            NgayThucHien = new DateTime(2020, 6, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NoiDung = "Huân chương lao động hạng 3"
                        });
                });

            modelBuilder.Entity("QLSQ.Data.Entities.QLLuong", b =>
                {
                    b.Property<int>("IDLuong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("IDLuongCB")
                        .HasColumnType("int");

                    b.Property<int>("IDQLCV")
                        .HasColumnType("int");

                    b.Property<int>("IDQLQH")
                        .HasColumnType("int");

                    b.Property<int>("IDSQ")
                        .HasColumnType("int");

                    b.HasKey("IDLuong");

                    b.HasIndex("IDLuongCB");

                    b.HasIndex("IDQLCV");

                    b.HasIndex("IDQLQH");

                    b.HasIndex("IDSQ")
                        .IsUnique();

                    b.ToTable("QLLuong");

                    b.HasData(
                        new
                        {
                            IDLuong = 1,
                            IDLuongCB = 1,
                            IDQLCV = 1,
                            IDQLQH = 1,
                            IDSQ = 1
                        },
                        new
                        {
                            IDLuong = 2,
                            IDLuongCB = 1,
                            IDQLCV = 2,
                            IDQLQH = 2,
                            IDSQ = 2
                        },
                        new
                        {
                            IDLuong = 3,
                            IDLuongCB = 1,
                            IDQLCV = 3,
                            IDQLQH = 3,
                            IDSQ = 3
                        },
                        new
                        {
                            IDLuong = 4,
                            IDLuongCB = 1,
                            IDQLCV = 4,
                            IDQLQH = 4,
                            IDSQ = 4
                        },
                        new
                        {
                            IDLuong = 5,
                            IDLuongCB = 1,
                            IDQLCV = 5,
                            IDQLQH = 5,
                            IDSQ = 5
                        });
                });

            modelBuilder.Entity("QLSQ.Data.Entities.QLNghiPhep", b =>
                {
                    b.Property<int>("IDNP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("IDSQ")
                        .HasColumnType("int");

                    b.Property<int>("NghiPhepState")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("ThoiGianBDNP")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianKTNP")
                        .HasColumnType("datetime2");

                    b.HasKey("IDNP");

                    b.HasIndex("IDSQ");

                    b.ToTable("QLNghiPhep");

                    b.HasData(
                        new
                        {
                            IDNP = 1,
                            IDSQ = 1,
                            NghiPhepState = 0,
                            ThoiGianBDNP = new DateTime(2019, 9, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ThoiGianKTNP = new DateTime(2019, 10, 13, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("QLSQ.Data.Entities.QLQuaTrinhDaoTao", b =>
                {
                    b.Property<int>("IDQLQTDT")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("HinhThucDT")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("IDSQ")
                        .HasColumnType("int");

                    b.Property<string>("NganhHoc")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("TenTruong")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("ThoiGianBDDT")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianKTDT")
                        .HasColumnType("datetime2");

                    b.Property<string>("VanBang")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("IDQLQTDT");

                    b.HasIndex("IDSQ");

                    b.ToTable("QLQuaTrinhDaoTao");

                    b.HasData(
                        new
                        {
                            IDQLQTDT = 1,
                            HinhThucDT = "Chính quy",
                            IDSQ = 1,
                            NganhHoc = "Công nghệ thông tin",
                            TenTruong = "Trường Sĩ quan Thông tin",
                            ThoiGianBDDT = new DateTime(2004, 9, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ThoiGianKTDT = new DateTime(2007, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VanBang = "Cử nhân"
                        });
                });

            modelBuilder.Entity("QLSQ.Data.Entities.QLQuanHam", b =>
                {
                    b.Property<int>("IDQLQH")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("IDHeSoLuongTheoQH")
                        .HasColumnType("int");

                    b.Property<int>("IDQH")
                        .HasColumnType("int");

                    b.Property<int>("IDSQ")
                        .HasColumnType("int");

                    b.HasKey("IDQLQH");

                    b.HasIndex("IDHeSoLuongTheoQH");

                    b.HasIndex("IDQH");

                    b.HasIndex("IDSQ");

                    b.ToTable("QLQuanHam");

                    b.HasData(
                        new
                        {
                            IDQLQH = 1,
                            IDHeSoLuongTheoQH = 6,
                            IDQH = 6,
                            IDSQ = 1
                        },
                        new
                        {
                            IDQLQH = 2,
                            IDHeSoLuongTheoQH = 6,
                            IDQH = 6,
                            IDSQ = 2
                        },
                        new
                        {
                            IDQLQH = 3,
                            IDHeSoLuongTheoQH = 6,
                            IDQH = 6,
                            IDSQ = 3
                        },
                        new
                        {
                            IDQLQH = 4,
                            IDHeSoLuongTheoQH = 6,
                            IDQH = 6,
                            IDSQ = 4
                        },
                        new
                        {
                            IDQLQH = 5,
                            IDHeSoLuongTheoQH = 6,
                            IDQH = 6,
                            IDSQ = 5
                        });
                });

            modelBuilder.Entity("QLSQ.Data.Entities.QuanHam", b =>
                {
                    b.Property<int>("IDQH")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("TenQH")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IDQH");

                    b.ToTable("QuanHam");

                    b.HasData(
                        new
                        {
                            IDQH = 1,
                            TenQH = "Thiếu Úy"
                        },
                        new
                        {
                            IDQH = 2,
                            TenQH = "Trung Úy"
                        },
                        new
                        {
                            IDQH = 3,
                            TenQH = "Thượng Úy"
                        },
                        new
                        {
                            IDQH = 4,
                            TenQH = "Đại Úy"
                        },
                        new
                        {
                            IDQH = 5,
                            TenQH = "Thiếu Tá"
                        },
                        new
                        {
                            IDQH = 6,
                            TenQH = "Trung Tá"
                        },
                        new
                        {
                            IDQH = 7,
                            TenQH = "Thượng Tá"
                        },
                        new
                        {
                            IDQH = 8,
                            TenQH = "Đại tá"
                        },
                        new
                        {
                            IDQH = 9,
                            TenQH = "Thiếu Tướng"
                        },
                        new
                        {
                            IDQH = 10,
                            TenQH = "Trung Tướng"
                        },
                        new
                        {
                            IDQH = 11,
                            TenQH = "Thượng Tướng"
                        },
                        new
                        {
                            IDQH = 12,
                            TenQH = "Đại Tướng"
                        });
                });

            modelBuilder.Entity("QLSQ.Data.Entities.SiQuan", b =>
                {
                    b.Property<int>("IDSQ")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasDefaultValue("M");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("QueQuan")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.Property<Guid>("UserId")
                        .IsUnicode(false)
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IDSQ");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("SiQuan");

                    b.HasData(
                        new
                        {
                            IDSQ = 1,
                            GioiTinh = "F",
                            HoTen = "Lê Thị Hiền",
                            NgaySinh = new DateTime(1985, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QueQuan = "Nghệ An",
                            SDT = "0377526687",
                            UserId = new Guid("9ece85c8-a453-4ffc-b5ab-bf7d4c3365f9")
                        },
                        new
                        {
                            IDSQ = 2,
                            GioiTinh = "M",
                            HoTen = "Đỗ Văn Tuấn",
                            NgaySinh = new DateTime(1985, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QueQuan = "Nghệ An",
                            SDT = "0374561237",
                            UserId = new Guid("78b61ff5-714b-4c2e-9566-6df4396b1208")
                        },
                        new
                        {
                            IDSQ = 3,
                            GioiTinh = "F",
                            HoTen = "Lê Thị Giang",
                            NgaySinh = new DateTime(1985, 9, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QueQuan = "Nghệ An",
                            SDT = "0373568745",
                            UserId = new Guid("4c39ee3b-0277-4b32-8173-261988cce2ee")
                        },
                        new
                        {
                            IDSQ = 4,
                            GioiTinh = "M",
                            HoTen = "Nguyễn Văn Hoàn",
                            NgaySinh = new DateTime(1987, 11, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QueQuan = "Nghệ An",
                            SDT = "0374231456",
                            UserId = new Guid("2c31d31e-1520-48ee-9e62-2311829cf7ba")
                        },
                        new
                        {
                            IDSQ = 5,
                            GioiTinh = "M",
                            HoTen = "Vũ Văn Cảnh",
                            NgaySinh = new DateTime(1984, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            QueQuan = "Nghệ An",
                            SDT = "0374123456",
                            UserId = new Guid("41a8e023-7c08-46bb-858c-5a3b219818cb")
                        });
                });

            modelBuilder.Entity("QLSQ.Data.Entities.SiQuanImage", b =>
                {
                    b.Property<int>("IDImage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Caption")
                        .HasMaxLength(300)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<int>("IDSQ")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.HasKey("IDImage");

                    b.HasIndex("IDSQ");

                    b.ToTable("SiQuanImage");
                });

            modelBuilder.Entity("QLSQ.Data.Entities.ChucVu", b =>
                {
                    b.HasOne("QLSQ.Data.Entities.BoPhan", "BoPhan")
                        .WithMany("ChucVus")
                        .HasForeignKey("IDBP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BoPhan");
                });

            modelBuilder.Entity("QLSQ.Data.Entities.HeSoLuongTheoQuanHam", b =>
                {
                    b.HasOne("QLSQ.Data.Entities.QuanHam", "QuanHam")
                        .WithMany("HeSoLuongTheoQuanHams")
                        .HasForeignKey("IDQH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuanHam");
                });

            modelBuilder.Entity("QLSQ.Data.Entities.HeSoPhuCapTheoChucVu", b =>
                {
                    b.HasOne("QLSQ.Data.Entities.ChucVu", "ChucVu")
                        .WithMany("HeSoPhuCapTheoChucVus")
                        .HasForeignKey("IDCV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChucVu");
                });

            modelBuilder.Entity("QLSQ.Data.Entities.QLChucVu", b =>
                {
                    b.HasOne("QLSQ.Data.Entities.ChucVu", "ChucVu")
                        .WithMany("QLChucVus")
                        .HasForeignKey("IDCV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLSQ.Data.Entities.SiQuan", "SiQuan")
                        .WithMany("QLChucVus")
                        .HasForeignKey("IDSQ")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChucVu");

                    b.Navigation("SiQuan");
                });

            modelBuilder.Entity("QLSQ.Data.Entities.QLCongTac", b =>
                {
                    b.HasOne("QLSQ.Data.Entities.SiQuan", "SiQuan")
                        .WithMany("QLCongTacs")
                        .HasForeignKey("IDSQ")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SiQuan");
                });

            modelBuilder.Entity("QLSQ.Data.Entities.QLDangVien", b =>
                {
                    b.HasOne("QLSQ.Data.Entities.SiQuan", "SiQuan")
                        .WithMany("QLDangViens")
                        .HasForeignKey("IDSQ")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SiQuan");
                });

            modelBuilder.Entity("QLSQ.Data.Entities.QLGiaDinhSQ", b =>
                {
                    b.HasOne("QLSQ.Data.Entities.SiQuan", "SiQuan")
                        .WithMany("QLGiaDinhSQs")
                        .HasForeignKey("IDSQ")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SiQuan");
                });

            modelBuilder.Entity("QLSQ.Data.Entities.QLKhenThuongKiLuat", b =>
                {
                    b.HasOne("QLSQ.Data.Entities.SiQuan", "SiQuan")
                        .WithMany("QLKhenThuongKiLuats")
                        .HasForeignKey("IDSQ")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SiQuan");
                });

            modelBuilder.Entity("QLSQ.Data.Entities.QLLuong", b =>
                {
                    b.HasOne("QLSQ.Data.Entities.LuongCoBan", "LuongCoBan")
                        .WithMany("QLLuongs")
                        .HasForeignKey("IDLuongCB")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLSQ.Data.Entities.QLChucVu", "QLChucVu")
                        .WithMany("QLLuongs")
                        .HasForeignKey("IDQLCV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLSQ.Data.Entities.QLQuanHam", "QLQuanHam")
                        .WithMany("QLLuongs")
                        .HasForeignKey("IDQLQH")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("QLSQ.Data.Entities.SiQuan", "SiQuan")
                        .WithOne("QLLuongs")
                        .HasForeignKey("QLSQ.Data.Entities.QLLuong", "IDSQ")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LuongCoBan");

                    b.Navigation("QLChucVu");

                    b.Navigation("QLQuanHam");

                    b.Navigation("SiQuan");
                });

            modelBuilder.Entity("QLSQ.Data.Entities.QLNghiPhep", b =>
                {
                    b.HasOne("QLSQ.Data.Entities.SiQuan", "SiQuan")
                        .WithMany("QLNghiPheps")
                        .HasForeignKey("IDSQ")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SiQuan");
                });

            modelBuilder.Entity("QLSQ.Data.Entities.QLQuaTrinhDaoTao", b =>
                {
                    b.HasOne("QLSQ.Data.Entities.SiQuan", "SiQuan")
                        .WithMany("QLQuaTrinhDaoTaos")
                        .HasForeignKey("IDSQ")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SiQuan");
                });

            modelBuilder.Entity("QLSQ.Data.Entities.QLQuanHam", b =>
                {
                    b.HasOne("QLSQ.Data.Entities.HeSoLuongTheoQuanHam", "HeSoLuongTheoQuanHam")
                        .WithMany("QLQuanHams")
                        .HasForeignKey("IDHeSoLuongTheoQH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLSQ.Data.Entities.QuanHam", "QuanHam")
                        .WithMany("QLQuanHams")
                        .HasForeignKey("IDQH")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("QLSQ.Data.Entities.SiQuan", "SiQuan")
                        .WithMany("QLQuanHams")
                        .HasForeignKey("IDSQ")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HeSoLuongTheoQuanHam");

                    b.Navigation("QuanHam");

                    b.Navigation("SiQuan");
                });

            modelBuilder.Entity("QLSQ.Data.Entities.SiQuan", b =>
                {
                    b.HasOne("QLSQ.Data.Entities.AppUser", "AppUser")
                        .WithOne("SiQuan")
                        .HasForeignKey("QLSQ.Data.Entities.SiQuan", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("QLSQ.Data.Entities.SiQuanImage", b =>
                {
                    b.HasOne("QLSQ.Data.Entities.SiQuan", "SiQuan")
                        .WithMany("SiQuanImages")
                        .HasForeignKey("IDSQ")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SiQuan");
                });

            modelBuilder.Entity("QLSQ.Data.Entities.AppUser", b =>
                {
                    b.Navigation("SiQuan");
                });

            modelBuilder.Entity("QLSQ.Data.Entities.BoPhan", b =>
                {
                    b.Navigation("ChucVus");
                });

            modelBuilder.Entity("QLSQ.Data.Entities.ChucVu", b =>
                {
                    b.Navigation("HeSoPhuCapTheoChucVus");

                    b.Navigation("QLChucVus");
                });

            modelBuilder.Entity("QLSQ.Data.Entities.HeSoLuongTheoQuanHam", b =>
                {
                    b.Navigation("QLQuanHams");
                });

            modelBuilder.Entity("QLSQ.Data.Entities.LuongCoBan", b =>
                {
                    b.Navigation("QLLuongs");
                });

            modelBuilder.Entity("QLSQ.Data.Entities.QLChucVu", b =>
                {
                    b.Navigation("QLLuongs");
                });

            modelBuilder.Entity("QLSQ.Data.Entities.QLQuanHam", b =>
                {
                    b.Navigation("QLLuongs");
                });

            modelBuilder.Entity("QLSQ.Data.Entities.QuanHam", b =>
                {
                    b.Navigation("HeSoLuongTheoQuanHams");

                    b.Navigation("QLQuanHams");
                });

            modelBuilder.Entity("QLSQ.Data.Entities.SiQuan", b =>
                {
                    b.Navigation("QLChucVus");

                    b.Navigation("QLCongTacs");

                    b.Navigation("QLDangViens");

                    b.Navigation("QLGiaDinhSQs");

                    b.Navigation("QLKhenThuongKiLuats");

                    b.Navigation("QLLuongs");

                    b.Navigation("QLNghiPheps");

                    b.Navigation("QLQuanHams");

                    b.Navigation("QLQuaTrinhDaoTaos");

                    b.Navigation("SiQuanImages");
                });
#pragma warning restore 612, 618
        }
    }
}
